// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employees {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  fname     String
  lname     String
  staffid   String   @unique
  address   String
  deptId    String
  contact   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  department  departments   @relation(fields: [deptId], references: [id])
  attendance  attendance[]
  appointment appointments[]
}

// admins model
model admins {
  id             String           @id @default(cuid())
  email          String           @unique
  password       String
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  attendanceCode attendanceCode[]
}

// departments model
model departments {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employees employees[]
}

// Attendance model
model attendance {
  id               String    @id @default(cuid())
  employeeId       String
  clockIn          DateTime
  clockOut         DateTime?
  breakStart       DateTime?
  breakEnd         DateTime?
  AttendanceCodeId String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Define relation to employees model
  employee       employees      @relation(fields: [employeeId], references: [id])
  AttendanceCode attendanceCode @relation(fields: [AttendanceCodeId], references: [id])
}

// Attendance code model
model attendanceCode {
  id          String   @id @default(cuid())
  code        String
  createdAt   DateTime @default(now())
  createdById String

  createdBy  admins       @relation(fields: [createdById], references: [id])
  attendance attendance[]
}

// Define the Appointment model
model appointments {
  id              String   @id @default(cuid()) // Unique identifier for the appointment
  visitorName     String // Name of the visitor
  visitorEmail    String // Email of the visitor
  visitorPhone    String? // Phone number of the visitor (optional)
  visitorFrom     String? // Address or location from where the visitor is coming (optional)
  appointmentDate DateTime // Date of the appointment
  purpose         String // Purpose or reason for the appointment
  employeeId      String // ID of the employee the appointment is booked with
  createdAt       DateTime @default(now()) // Timestamp for when the appointment was created
  updatedAt       DateTime @updatedAt // Timestamp for when the appointment was last updated

  employee employees @relation(fields: [employeeId], references: [id]) // Employee the appointment is booked with
}
