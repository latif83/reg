// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employees {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  fname     String
  lname     String
  staffid   String   @unique
  address   String
  deptId    String
  contact   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  department    departments    @relation(fields: [deptId], references: [id])
  attendance    attendance[]
  appointment   appointments[]
  sentMemos     Memo[]         @relation("MemoSender")
  receivedMemos Memo[]         @relation("MemoRecipient")
}

// admins model
model admins {
  id             String           @id @default(cuid())
  email          String           @unique
  password       String
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  attendanceCode attendanceCode[]
}

// departments model
model departments {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employees employees[]
}

// Attendance model
model attendance {
  id               String    @id @default(cuid())
  employeeId       String
  clockIn          DateTime
  clockOut         DateTime?
  breakStart       DateTime?
  breakEnd         DateTime?
  AttendanceCodeId String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Define relation to employees model
  employee       employees      @relation(fields: [employeeId], references: [id])
  AttendanceCode attendanceCode @relation(fields: [AttendanceCodeId], references: [id])
}

// Attendance code model
model attendanceCode {
  id          String   @id @default(cuid())
  code        String
  createdAt   DateTime @default(now())
  createdById String

  createdBy  admins       @relation(fields: [createdById], references: [id])
  attendance attendance[]
}

// Define the Appointment model
model appointments {
  id              String            @id @default(cuid())
  visitorName     String
  visitorEmail    String
  visitorPhone    String?
  visitorFrom     String?
  appointmentDate DateTime
  purpose         String
  employeeId      String
  status          AppointmentStatus @default(PENDING)
  declineReason   String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  employee employees @relation(fields: [employeeId], references: [id])
}

model Memo {
  id          Int               @id @default(autoincrement())
  title       String
  details     String
  senderId    String
  recipientId String
  status      AppointmentStatus @default(PENDING)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  recipient employees @relation("MemoRecipient", fields: [recipientId], references: [id])
  sender    employees @relation("MemoSender", fields: [senderId], references: [id])
}

// Define the AppointmentStatus enum
enum AppointmentStatus {
  PENDING
  APPROVED
  DECLINED
}
